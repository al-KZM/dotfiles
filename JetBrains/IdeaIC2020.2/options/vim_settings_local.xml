<application>
  <component name="VimHistorySettings">
    <history>
      <history-search>
        <entry>x</entry>
        <entry>X</entry>
        <entry>=</entry>
        <entry>Segment1</entry>
        <entry>LA</entry>
        <entry>isLeft</entry>
        <entry>isRight</entry>
        <entry>equals</entry>
        <entry>println</entry>
        <entry>main</entry>
        <entry>toString</entry>
        <entry>triangleEdge</entry>
        <entry>triangleEdge1</entry>
        <entry>triangleEdge2</entry>
        <entry encoding="base64">XDxTeXN0ZW1cPg==</entry>
        <entry>point</entry>
        <entry>vertices[</entry>
        <entry>Next</entry>
        <entry>findVertex</entry>
        <entry>calcPerimeter</entry>
      </history-search>
      <history-cmd>
        <entry encoding="base64">JzwsJz5zL2luQ2lyY2xlL291dENpcmNsZS9n</entry>
        <entry>%s/K_0/KELVIN_0/g</entry>
        <entry>%s/F_0/FAHRENHEIT_0/g</entry>
        <entry>%s/temperatureType/temperatureScale/g</entry>
        <entry>s/x/y/g</entry>
        <entry encoding="base64">JzwsJz5zL1gvWS9n</entry>
        <entry encoding="base64">JzwsJz5zL1NlZ21lbnQxL1NlZ21lbnQyL2c=</entry>
        <entry encoding="base64">JzwsJz5zL3RyaWFuZ2xlRWRnZTEvdHJpYW5nbGVWZXJ0ZXgxL2c=</entry>
        <entry encoding="base64">JzwsJz5zL3RyaWFuZ2xlRWRnZTIvdHJpYW5nbGVWZXJ0ZXgyL2c=</entry>
        <entry>w:w</entry>
        <entry encoding="base64">JzwsJz53</entry>
        <entry>W</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
  </component>
  <component name="VimMarksSettings">
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment.java" timestamp="1606434683928">
        <mark key="[" line="3" column="4" />
        <mark key="]" line="2" column="26" />
        <mark key="^" line="2" column="26" />
        <mark key="." line="2" column="25" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" timestamp="1606492689440">
        <mark key="'" line="266" column="56" />
        <mark key="[" line="165" column="0" />
        <mark key="]" line="165" column="0" />
        <mark key="." line="165" column="0" />
        <mark key="^" line="274" column="8" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Temperature.java" timestamp="1604758827155">
        <mark key="'" line="19" column="28" />
        <mark key="[" line="15" column="97" />
        <mark key="]" line="15" column="97" />
        <mark key="^" line="15" column="97" />
        <mark key="." line="15" column="96" />
      </file>
      <file name="$USER_HOME$/documents/university/courses_notes/java_1/exams/maman_13/Polygon.java" timestamp="1607697544533">
        <mark key="[" line="6" column="14" />
        <mark key="]" line="5" column="4" />
        <mark key="." line="5" column="3" />
        <mark key="^" line="5" column="4" />
      </file>
      <file name="$USER_HOME$/documents/university/courses_notes/java_1/exams/maman_13/src/Polygon.java" timestamp="1607698373085">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="10" column="0" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1Tester.java" timestamp="1606492529292">
        <mark key="'" line="12" column="0" />
        <mark key="[" line="14" column="37" />
        <mark key="]" line="14" column="37" />
        <mark key="^" line="14" column="37" />
        <mark key="." line="14" column="36" />
      </file>
      <file name="$USER_HOME$/documents/university/courses_notes/java_1/exams/maman_13/Point.class" timestamp="1607697298311">
        <mark key="'" line="4" column="0" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" timestamp="1607800962322">
        <mark key="'" line="299" column="35" />
        <mark key="[" line="22" column="0" />
        <mark key="]" line="22" column="0" />
        <mark key="." line="22" column="0" />
        <mark key="^" line="22" column="41" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/first_test/src/Lincoln.java" timestamp="1604740580105">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="6" column="0" />
        <mark key="." line="6" column="0" />
        <mark key="^" line="4" column="28" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Circle.java" timestamp="1606433659484">
        <mark key="'" line="51" column="25" />
        <mark key="[" line="1" column="0" />
        <mark key="]" line="1" column="22" />
        <mark key="." line="2" column="0" />
        <mark key="^" line="49" column="59" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/PolygonTest3.java" timestamp="1607794284822">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="322" column="0" />
        <mark key="^" line="295" column="26" />
        <mark key="." line="295" column="25" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/PointTester.java" timestamp="1606492373263">
        <mark key="[" line="11" column="0" />
        <mark key="]" line="30" column="90" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" timestamp="1606492381767">
        <mark key="'" line="2" column="13" />
        <mark key="[" line="124" column="0" />
        <mark key="]" line="124" column="0" />
        <mark key="." line="124" column="0" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/PolygonTest.java" timestamp="1607798322754">
        <mark key="[" line="0" column="1" />
        <mark key="]" line="3" column="24" />
        <mark key="." line="3" column="23" />
        <mark key="^" line="3" column="24" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/deps/Point.class" timestamp="1607699035674">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="81" column="0" />
        <mark key="]" line="83" column="5" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" timestamp="1606492954076">
        <mark key="'" line="181" column="7" />
        <mark key="[" line="281" column="0" />
        <mark key="]" line="281" column="0" />
        <mark key="^" line="272" column="44" />
        <mark key="." line="281" column="0" />
      </file>
      <file name="/fragment.java" timestamp="1607794255479">
        <mark key="[" line="0" column="0" />
        <mark key="." line="23" column="35" />
      </file>
      <file name="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2Tester.java" timestamp="1606492444889">
        <mark key="'" line="11" column="25" />
        <mark key="[" line="11" column="0" />
        <mark key="]" line="45" column="84" />
      </file>
    </filemarks>
    <jumps>
      <jump line="7" column="12" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/first_test/src/Lincoln.java" />
      <jump line="2" column="24" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/first_test/src/Lincoln.java" />
      <jump line="33" column="40" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Circle.java" />
      <jump line="2" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Circle.java" />
      <jump line="52" column="25" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Circle.java" />
      <jump line="31" column="63" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Temperature.java" />
      <jump line="30" column="12" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Temperature.java" />
      <jump line="19" column="28" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman11/src/Temperature.java" />
      <jump line="29" column="4" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="73" column="22" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="44" column="21" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="85" column="4" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="27" column="36" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="28" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="40" column="4" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="133" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="71" column="18" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="68" column="33" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="12" column="45" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="76" column="4" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="62" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="100" column="24" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="109" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="143" column="19" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="142" column="19" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="52" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="21" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="20" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="18" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="17" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="256" column="30" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="139" column="42" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="167" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="204" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="98" column="19" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="101" column="25" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="129" column="14" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="2" column="13" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Point.java" />
      <jump line="11" column="19" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1Tester.java" />
      <jump line="268" column="56" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1.java" />
      <jump line="11" column="25" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2Tester.java" />
      <jump line="108" column="24" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="223" column="4" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="267" column="17" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="12" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment1Tester.java" />
      <jump line="170" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="181" column="7" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman12/src/Segment2.java" />
      <jump line="4" column="0" filename="$USER_HOME$/documents/university/courses_notes/java_1/exams/maman_13/Point.class" />
      <jump line="0" column="0" filename="$USER_HOME$/documents/university/courses_notes/java_1/exams/maman_13/src/Polygon.java" />
      <jump line="12" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="0" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/deps/Point.class" />
      <jump line="27" column="47" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="1" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="17" column="27" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="76" column="13" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="104" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="114" column="7" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="126" column="23" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="38" column="18" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="132" column="23" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="127" column="12" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="134" column="12" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="295" column="25" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/PolygonTest3.java" />
      <jump line="0" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/PolygonTest3.java" />
      <jump line="213" column="48" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="244" column="107" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="98" column="27" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="24" column="13" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="50" column="19" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="68" column="9" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="69" column="9" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="288" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="152" column="20" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="154" column="30" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="192" column="6" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="6" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/PolygonTest.java" />
      <jump line="177" column="74" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="0" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="301" column="0" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="10" column="26" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
      <jump line="299" column="35" filename="$USER_HOME$/documents/programmation/java/IdeaProjects/maman_13/src/Polygon.java" />
    </jumps>
  </component>
  <component name="VimRegisterSettings">
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64">ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oX3ZlcnRpY2VzWzRdKTsK</text>
      </register>
      <register name="-" type="4">
        <text>t</text>
      </register>
      <register name="m" type="4">
        <keys>
          <key char="105" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="117" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="66" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="46" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="86" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="40" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="41" code="0" mods="0" />
          <key char="65535" code="39" mods="0" />
          <key char="65535" code="8" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="87" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="/" type="4">
        <text>calcPerimeter</text>
      </register>
      <register name="0" type="4">
        <text>getVertex(0)</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oX3ZlcnRpY2VzWzRdKTsK</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">ICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihwb2x5LikK</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="5" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="6" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name="8" type="8">
        <text encoding="base64">aW50IAppbnQgCmludCAKaW50IA==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">CiAgICAgICAgLy8gQ3JlYXRlIHZhcmlhYmxlcyB0aGF0IHdpbGwgaG9sZCBtaW5pbXVtIGNvb3JkaW5hdGVzIGFuZCBpbml0aWFsaXplIGV2ZXJ5b25lIG9mIHRoZW0KICAgICAgICAvLyB0byB0aGUgY29vcmRpbmF0ZXMgb2YgdGhlIGZpcnN0IHBvaW50CiAgICAgICAgZG91YmxlIHhNaW4sIHhNYXgsIHlNaW4sIHlNYXg7CiAgICAgICAgeE1pbiA9IHhNYXggPSBfdmVydGljZXNbMF0uZ2V0WCgpOwogICAgICAgIHlNaW4gPSB5TWF4ID0gX3ZlcnRpY2VzWzBdLmdldFkoKTsK</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
  </component>
  <component name="VimSearchSettings">
    <search>
      <last-search>calcPerimeter</last-search>
      <last-offset />
      <last-pattern>calcPerimeter</last-pattern>
      <last-replace>triangleVertex2</last-replace>
      <last-substitute>triangleEdge2</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
  </component>
</application>