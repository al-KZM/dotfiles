set guifont=Monaco:h28
let mapleader =","
let VIMDIR="$CONFIG_DIR/nvim/init.vim.d"
set statusline+=%F

""" Path config
"let g:skeletons_dir="$CONFIG_DIR/nvim/file_templates"

""" System
"Run .vimrc file if it present in wd, secure prevent from security holes generated by that
set exrc
set secure

""" Enable visual selection beyond the end of line
"set virtualedit+=all

""" Location list height
let g:lt_height = 10

"Add my custom runtime to runtime path
let &rtp .= ','.expand("$CONFIG_DIR/nvim/runtime")
"source $CONFIG_DIR/nvim/init.vim.d/Filetype.vim
source $CONFIG_DIR/nvim/init.vim.d/plugins.vim
source $CONFIG_DIR/nvim/init.vim.d/functions.vim
source $CONFIG_DIR/nvim/init.vim.d/shortcuts.vim

"Basic config
autocmd ColorScheme * hi clear SpellBad
autocmd ColorScheme * hi clear SpellRare
autocmd ColorScheme * hi clear SpellBad
autocmd ColorScheme * hi clear SpellCap
autocmd ColorScheme * hi clear SpellLocal

"colorscheme tokyonight-moon
"colorscheme "tokyonight-night"
"colorscheme "tokyonight-storm"
"colorscheme "tokyonight-day"


"""Actions on :w
" Automatic color highligh
"autocmd BufWritePre * ColorHighlight

" TMUX support
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\e[5 q\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\e[2 q\<Esc>\\"
else
    let &t_SI = "\e[5 q"
    let &t_EI = "\e[2 q"
endif

" Some basics:
set bg=light
set go=a
set mouse=a
set nohlsearch
set clipboard+=unnamedplus

"Indents settings
set tabstop=4
set shiftwidth=4
set expandtab
set softtabstop=4

nnoremap c "_c
set nocompatible
filetype plugin on
filetype plugin indent on
"syntax on
set encoding=utf-8
set number relativenumber

" Disable right margin
set cc=0

" Disables automatic commenting on newline:
setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Splits open at the bottom and right, which is non-retarded, unlike vim defaults.
set splitbelow splitright

" Sessions management
let g:session_autoload = "yes"
let g:session_autosave = "yes"

"Make taboo remember tab names
set sessionoptions+=tabpages,globals

" Enable Goyo by default for mutt writting
" Goyo's width will be the line limit in mutt.
autocmd BufRead,BufNewFile /tmp/neomutt* let g:goyo_width=80
autocmd BufRead,BufNewFile /tmp/neomutt* :Goyo \| set bg=light

" Automatically deletes all trailing whitespace on save.
autocmd BufWritePre * call StripTrailingWhitespaces()

" When shortcut files are updated, renew bash and vifm configs with new material:
autocmd BufWritePost $CONFIG_DIR/bmdirs,$CONFIG_DIR/bmfiles !shortcuts

" Update binds when sxhkdrc is updated.
autocmd BufWritePost *sxhkdrc !pkill -USR1 sxhkd

" Run xrdb whenever Xdefaults or Xresources are updated.
autocmd BufWritePost *Xresources,*Xdefaults !xrdb %


""" File templates
if has("autocmd")
  augroup templates
        autocmd BufNewFile main.*  silent! execute '0r ' . g:skeletons_dir . '/skeleton-main.' . expand("<afile>:e")
        autocmd BufNewFile *.*  silent! execute '0r ' . g:skeletons_dir . '/skeleton.' . expand("<afile>:e")

        autocmd BufNewFile * %substitute#\[:VIM_EVAL:\]\(.\{-\}\)\[:END_EVAL:\]#\=eval(submatch(1))#ge
  augroup END
endif

"function Gitignore(env)
"    echom g:skeletons_dir . '/skeleton-gitignore-' . a:env
"    silent! execute '0r ' . g:skeletons_dir . '/skeleton-gitignore-' . a:env
"endfunction

" I need to put this here, it is related to plugin tex-conceal
hi Conceal ctermbg=NONE
hi Conceal ctermfg=NONE
hi Conceal guifg=NONE
hi Conceal guibg=NONE



